// Prisma schema for Auth Service

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  password       String?  // null for SSO users
  firstName      String
  lastName       String
  phoneNumber    String?
  businessName   String?
  googleId       String?  @unique
  emailVerified  Boolean  @default(false)
  verificationTokens VerificationToken[]
  roles          UserRole[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  permissions Permission[]
  users       UserRole[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  roles       Role[]
}

model UserRole {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
}

model VerificationToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}
